?doRNG
?cv_folds
packages <- c("arm", "boot", "devtools", "doParallel", "doRNG", "dplyr",
"e1071", "earth", "foreach", "gam", "ggplot2", "glmnet",
"mvtnorm", "nnet", "ranger", "readr", "rmutil", "rpart",
"sandwich", "stringr", "tibble", "tidyr", "tmle")
for (package in packages) {
library(package, character.only=T)
}
?doRNG
?cv_folds
??cv_folds
library(sl3)
?cv_folds
.libPaths()
getwd()
devtools::document()
devtools::document()
?generate_covariates
library(NPDR)
library(NPD)R
library(NPDR)
?generate_covariates
getwd()
sink("tmp.text", type = "message")
log_file <- file("tmp.txt", open = "wt")
sink(log_file, type = "message")
print("testing output")
sink(type = "message")
close(log_file)
log_file <- file("tmp.txt", open = "wt")
cat("testing output")
sink(type = "message")
cat("testing output")
sink(type = "message")
close(log_file)
log_file <- file("tmp.txt", open = "wt")
sink(type = c("message", "output"))
curr_dir <- "./results_nonparametric22/metrics/"
# dr_path <- file.path(curr_dir, "results_dr.txt")
# sr_path <- file.path(curr_dir, "results_sr.txt")
# curr_path <- file.path(curr_dir, "results_oracle_se.txt")
curr_path <- file.path(curr_dir, "results.txt")
paste0(curr_dir, list.files(curr_dir)) %>%
grep(pattern = "gcomp|_ipw|aipw|tmle", value = TRUE) %>%
lapply(read_tsv) %>%
bind_rows %>%
unite("id", c(counter, metric, N)) %>%
gather(key = "key", value = "value", -id) %>%
drop_na() %>%
mutate_if(is.numeric, round, 6) %>%
distinct() %>%
spread(key, value) %>%
separate(id, into = c("counter", "metric", "N")) %>%
write_tsv(curr_path)
source("NPDR/functions_results.R")
curr_dir <- "./results_nonparametric22/metrics/"
getwd()
setwd("../")
getwd()
curr_dir <- "./results_nonparametric22/metrics/"
# dr_path <- file.path(curr_dir, "results_dr.txt")
# sr_path <- file.path(curr_dir, "results_sr.txt")
# curr_path <- file.path(curr_dir, "results_oracle_se.txt")
curr_path <- file.path(curr_dir, "results.txt")
paste0(curr_dir, list.files(curr_dir)) %>%
grep(pattern = "gcomp|_ipw|aipw|tmle", value = TRUE) %>%
lapply(read_tsv) %>%
bind_rows %>%
unite("id", c(counter, metric, N)) %>%
gather(key = "key", value = "value", -id) %>%
drop_na() %>%
mutate_if(is.numeric, round, 6) %>%
distinct() %>%
spread(key, value) %>%
separate(id, into = c("counter", "metric", "N")) %>%
write_tsv(curr_path)
list.files(curr_dir)
curr_dir <- "./results_nonparametric22/metrics/"
getwd()
list.files(curr_dir)
?bind_rows
tmp <- paste0(curr_dir, list.files(curr_dir)) %>%
grep(pattern = "gcomp|_ipw|aipw|tmle", value = TRUE) %>%
lapply(read_tsv) %>%
bind_rows #%>%
tmp
curr_dir
getwd()
curr_dir <- "./results_nonparametric22/metrics/"
# dr_path <- file.path(curr_dir, "results_dr.txt")
# sr_path <- file.path(curr_dir, "results_sr.txt")
# curr_path <- file.path(curr_dir, "results_oracle_se.txt")
curr_path <- file.path(curr_dir, "results.txt")
list.files(curr_dir)
curr_dir
getwd()
list.files()
list.dirs()
getwd()
?getwd()
list.dirs(getwd())
setwd(getwd())
getwd()
list.dirs()
?list.dirs
list.dirs(".")
curr_dir <- "../results_nonparametric22/metrics/"
source('~/Documents/Carnegie_Mellon/Causal_Inference_Projects/DoublyRobustSimulations/NPDR/compile_and_plot_results.R', echo=TRUE)
getwd()
source("functions_results.R")
curr_dir <- "./results_nonparametric22/metrics/"
# dr_path <- file.path(curr_dir, "results_dr.txt")
# sr_path <- file.path(curr_dir, "results_sr.txt")
# curr_path <- file.path(curr_dir, "results_oracle_se.txt")
curr_path <- file.path(curr_dir, "results.txt")
paste0(curr_dir, list.files(curr_dir)) %>%
grep(pattern = "gcomp|_ipw|aipw|tmle", value = TRUE) %>%
lapply(read_tsv) %>%
bind_rows %>%
unite("id", c(counter, metric, N)) %>%
gather(key = "key", value = "value", -id) %>%
drop_na() %>%
mutate_if(is.numeric, round, 6) %>%
distinct() %>%
spread(key, value) %>%
separate(id, into = c("counter", "metric", "N")) %>%
write_tsv(curr_path)
list.files(curr_dir)
sink(type = "message")
close(log_file)
getwd()
curr_dir <- "./results_nonparametric22/metrics/"
# dr_path <- file.path(curr_dir, "results_dr.txt")
# sr_path <- file.path(curr_dir, "results_sr.txt")
# curr_path <- file.path(curr_dir, "results_oracle_se.txt")
curr_path <- file.path(curr_dir, "results.txt")
paste0(curr_dir, list.files(curr_dir)) %>%
grep(pattern = "gcomp|_ipw|aipw|tmle", value = TRUE) %>%
lapply(read_tsv) %>%
bind_rows %>%
unite("id", c(counter, metric, N)) %>%
gather(key = "key", value = "value", -id) %>%
drop_na() %>%
mutate_if(is.numeric, round, 6) %>%
distinct() %>%
spread(key, value) %>%
separate(id, into = c("counter", "metric", "N")) %>%
write_tsv(curr_path)
curr_dir
list.dirs()
list.dirs("../")
curr_dir <- "../results_nonparametric22/metrics/"
# dr_path <- file.path(curr_dir, "results_dr.txt")
# sr_path <- file.path(curr_dir, "results_sr.txt")
# curr_path <- file.path(curr_dir, "results_oracle_se.txt")
curr_path <- file.path(curr_dir, "results.txt")
paste0(curr_dir, list.files(curr_dir)) %>%
grep(pattern = "gcomp|_ipw|aipw|tmle", value = TRUE) %>%
lapply(read_tsv) %>%
bind_rows %>%
unite("id", c(counter, metric, N)) %>%
gather(key = "key", value = "value", -id) %>%
drop_na() %>%
mutate_if(is.numeric, round, 6) %>%
distinct() %>%
spread(key, value) %>%
separate(id, into = c("counter", "metric", "N")) %>%
write_tsv(curr_path)
results_dirs = c("./results_parametric",
"./results_nonparametric1",
"./results_nonparametric2",
"./results_nonparametric3",
"./results_nonparametric1_nosplit",
"./results_nonparametric2_nosplit",
"./results_nonparametric3_nosplit",
"./results_nonparametric4",
"./results_nonparametric5",
"./results_nonparametric6",
"./results_nonparametric7",
"./results_nonparametric8",
"./results_nonparametric9/metrics",
"./results_nonparametric10/metrics",
"./results_nonparametric11/metrics",
"./results_nonparametric11/metrics/with_oracle_se",
"./results_nonparametric12/metrics",
"./results_nonparametric13/metrics",
"./results_nonparametric14/metrics",
"./results_nonparametric15/metrics",
"./results_nonparametric16/metrics",
"./results_nonparametric16b/metrics",
"./results_nonparametric17/metrics",
"./results_nonparametric18/metrics",
"./results_nonparametric19/metrics",
"./results_nonparametric20/metrics",
"./results_nonparametric21/metrics",
"./results_nonparametric22/metrics")
results_files <- c("./results_parametric/results.txt",
"./results_nonparametric1/results_dr.txt",
"./results_nonparametric1/results_sr.txt",
"./results_nonparametric2/results_dr.txt",
"./results_nonparametric2/results_sr.txt",
"./results_nonparametric3/results_dr.txt",
"./results_nonparametric3/results_sr.txt",
"./results_nonparametric1_nosplit/results_dr_nosplit1.txt",
"./results_nonparametric2_nosplit/results_dr_nosplit2.txt",
"./results_nonparametric3_nosplit/results_dr_nosplit3.txt",
"./results_nonparametric4/results_dr.txt",
"./results_nonparametric4/results_sr.txt",
"./results_nonparametric5/results_dr.txt",
"./results_nonparametric5/results_sr.txt",
"./results_nonparametric6/results_dr.txt",
"./results_nonparametric6/results_sr.txt",
"./results_nonparametric7/results_dr.txt",
"./results_nonparametric7/results_sr.txt",
"./results_nonparametric8/results_dr.txt",
"./results_nonparametric8/results_sr.txt",
"./results_nonparametric8/results_dr.txt",
"./results_nonparametric8/results_sr.txt",
"./results_nonparametric9/metrics/results.txt",
"./results_nonparametric10/metrics/results.txt",
"./results_nonparametric11/metrics/results.txt",
"./results_nonparametric11/metrics/with_oracle_se/results_oracle_se.txt",
"./results_nonparametric12/metrics/results.txt",
"./results_nonparametric13/metrics/results.txt",
"./results_nonparametric14/metrics/results.txt",
"./results_nonparametric15/metrics/results.txt",
"./results_nonparametric16/metrics/results.txt",
"./results_nonparametric16b/metrics/results.txt",
"./results_nonparametric17/metrics/results.txt",
"./results_nonparametric18/metrics/results.txt",
"./results_nonparametric19/metrics/results.txt",
"./results_nonparametric20/metrics/results.txt",
"./results_nonparametric21/metrics/results.txt",
"./results_nonparametric22/metrics/results.txt")
#### Aggregate raw results ####
aggregate_raw_results(results_files)
getwd()
devtools::document()
devtools::document()
?generate_outcomes
devtools::document()
?generate_outcomes
devtools::document()
?generate_outcomes
devtools::document()
?generate_outcomes
devtools::document()
?generate_outcomes
?sl3
??sl3
library(sl3)
?sl3
?sl
?make_sl3_Task
library(NPDR)
library(sl3)
nsim <- 100  # How many Monte Carlo simulations to run for each sample size
## Data parameters
beta_a <- c(-1, rep(log(1.75), 4))  # Parameter for treatment propensity
beta_y <- c(120, 6, 3, 3, 3)        # Parameter for outcomes
effect_size <- 6          # Size of true exposure effect
N <- c(200, 1200, 5000)   # Sample sizes
cv <- c(10, 5, 5)         # Number of folds for SuperLearner cross-validation,
## Learners for outcome model
gam_mu <- make_learner(Lrnr_gam, gamma = 1,
formula = as.formula("Y ~ A + s(Z1) + s(Z2) + s(Z3) + s(Z4)"))
stack_mu <- make_learner(Stack, gam_mu)
metalearner_mu <- make_learner(Lrnr_nnls)
sl_mu <- make_learner(Lrnr_sl, learners = stack_mu, metalearner = metalearner_mu)
class(sl_mu)
class(gam_mu)
?Lrnr_sl
?make_sl3_Task
devtools::document()
help(estimate_gcomp)
devtools::document()
help(estimate_gcomp)
devtools::document()
help(estimate_gcomp)
getwd()
getwd()
library(NPDR)
install.packages("LMERConvenienceFunctions")
library(LMERConvenienceFunctions)
?fitLMER.fnc
